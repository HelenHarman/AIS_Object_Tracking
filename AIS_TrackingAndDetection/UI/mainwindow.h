/*!
 * \file mainwindow.h
 * \author Helen Harman (heh14@aber.ac.uk)
 * \date 06/03/2015
 * \version 1.0
 *
 * \brief Holds the MainWindow class
 */
#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include <QInputDialog>

#include "qtWidgetImageDisplay.h"

namespace Ui // automatically generated by Qt.
{
    class MainWindow;
}

/*!
 * \class MainWindow
 * \brief The main UI window
 */
class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = 0);

    /*!
     * \fn getImageWidget
     * \return gets a pointer to the QtWidgetImageDisplay
     */
    QtWidgetImageDisplay* getImageWidget();

    ~MainWindow();
private slots:

    /*!
     * \fn setVideoInputToWebcam
     * \brief Called when the Webcam menu item is clicked
     */
    void setVideoInputToWebcam();

    /*!
     * \fn setVideoInputToFile
     * \brief Opens up the file browser to allow the user to selected a .ais_config file.
     * Containing for example :
     *      video_file : /Users/helen/Documents/UniWork/Dissertation/AIS_TrackingAndDetection/data/track_pen.mov
     *      location_x : 75
     *      location_y : 28
     *      width : 17
     *      height : 50
     */
    void setVideoInputToFile();

    /*!
     * \fn distanceMeasureChangedToSSD
     * \brief To use sum of squared difference as the distance measure
     */
    void distanceMeasureChangedToSSD();

    /*!
     * \fn distanceMeasureChangedToEuclidean
     * \brief To use euclidean distance as the distance measure
     */
    void distanceMeasureChangedToEuclidean();

    /*!
     * \fn useRotationChanged
     * \brief User has ticked/unticked the use rotation transformation option
     */
    void useRotationChanged();

    /*!
     * \fn useScaleChanged
     * \brief User has ticked/unticked the use scale transformation option
     */
    void useScaleChanged();

    /*!
     * \fn whichARBsToSearchWithChangedToALL
     * \brief User has selected to use all ARBs to search the frame
     */
    void whichARBsToSearchWithChangedToALL();

    /*!
     * \fn whichARBsToSearchWithChangedToAboveAverageRL
     * \brief User has selected to use ARBs with an above average resource level to search the frame
     */
    void whichARBsToSearchWithChangedToAboveAverageRL();
void whichARBsToSearchWithChangedToLatestAndConnected();
void whichARBsToSearchWithChangedToHighestAndConnected();

    /*!
     * \fn whichARBsToSearchWithChangedToLatestAndHighestRL
     * \brief User has selected to use latest ARBs and ARB with the highest RL to search the frame
     */
    void whichARBsToSearchWithChangedToLatestAndHighestRL();

    /*!
     * \fn changeObjectThreshold
     * \brief User has changed the object threshold
     */
    void changeObjectThreshold();

    /*!
     * \fn changeStimulationThreshold
     * \brief User has changed the stimulation threshold
     */
    void changeStimulationThreshold();

    /*!
     * \fn usePredictedLocationChanged
     * \brief If usePredictedLocation is true the predicted location will be calculated based on the previous location.
     * else the predictedLocation will be set to the current location
     */
    void usePredictedLocationChanged();

    /*!
     * \fn reset
     * \brief Stops and deletes the current tracking.
     */
    void reset();
private:
    /*!
     * \var ui
     */
    Ui::MainWindow *ui; //automatically generated by Qt

    /*!
     * \var imageWidget
     * \brief Used to show the video.
     */
    QtWidgetImageDisplay *imageWidget;
};

#endif // MAINWINDOW_H
